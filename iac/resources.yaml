Resources:
  # Creates a nested stack with the required Cognito requirements
  Be3CloudAuthStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./auth.yaml
      Parameters:
        ClientDomain: !Ref Client
        Postman: !Ref TestWithPostman

  # Creates an API Gateway HTTP API endpoint with JWT authorization
  Be3CloudHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Description: Cognito to HTTP API demo
      CorsConfiguration:
        AllowMethods:
          - GET
        AllowOrigins:
          - !Ref Client
      Auth:
        Authorizers:
          OAuth2Authorizer:
            AuthorizationScopes:
              - email
            IdentitySource: "$request.header.Authorization"
            JwtConfiguration:
              issuer: !GetAtt Be3CloudAuthStack.Outputs.Issuer
              audience:
                - !GetAtt Be3CloudAuthStack.Outputs.UserPoolClientId
        DefaultAuthorizer: OAuth2Authorizer

#   Creates a lambda function to return the user's email address
  Be3CloudFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.handler
      Events:
        HttpApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref Be3CloudHttpApi
            Path: /
            Method: ANY
      Metadata:
        Dockerfile: Dockerfile
        DockerContext: ./src
        DockerTag: python3.9-v1
